<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard - Pesquisa de Preço</title>
  <link rel="stylesheet" href="css/style.css">
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
  <!-- Leaflet CSS -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
  <!-- DataTables CSS -->
  <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css" />
  <style>
    body {
      background-color: #f4f4f9;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
   
    header {
    background-color: #005CAA;
    color: white;
    padding-top: 60px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    position: fixed;
    width: 100%;
    top: 0;
    z-index: 1000;
    height: 60px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    #map {
      height: 500px;
      margin-top: 20px;
      border-radius: 8px;
    }
    .container {
      margin-top: 20px;
    }
    .table-container, .chart-container, .map-container, .filter-container {
      background: white;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      margin-bottom: 20px;
    }
  </style>
</head>
<body>
    <header>
        <h4>Ministério do Esporte</h4>
        <img src="images/ASSINATURAS_ESPORTE__FUNDO PRETO 2 HORIZONTAL.png" class="logo-header" alt="IMG1">
      </header>

  <div class="container">
    <!-- Filtros -->
    <div class="filter-container">
      <h2>Filtros</h2>
      <div class="row mb-3">
        <div class="col-md-6">
          <select id="ufFilter" class="form-select">
            <option value="">Todos os UFs</option>
          </select>
        </div>
        <div class="col-md-6">
          <select id="itemFilter" class="form-select">
            <option value="">Todos os Itens Padronizados</option>
          </select>
        </div>
      </div>
      <button id="resetFilters" class="btn btn-secondary">Voltar</button>
    </div>

    <!-- Resumo dos Valores -->
    <div class="summary-container text-center">
      <h2>Resumo dos Valores</h2>
      <div class="row">
        <div class="col-md-4"><h4>Mínimo</h4><p id="min-value">R$ 0,00</p></div>
        <div class="col-md-4"><h4>Média</h4><p id="avg-value">R$ 0,00</p></div>
        <div class="col-md-4"><h4>Mediana</h4><p id="median-value">R$ 0,00</p></div>
      </div>
    </div>

    <!-- Gráfico -->
    <div class="chart-container">
      <h2><i class="fas fa-chart-column"></i> Itens Aprovados por UF</h2>
      <canvas id="itemChart"></canvas>
    </div>

    <!-- Mapa -->
    <div class="map-container">
      <h2><i class="fas fa-map-marked-alt"></i> Distribuição Geográfica</h2>
      <div id="map"></div>
    </div>

    <!-- Tabela -->
    <div class="table-container">
      <h2><i class="fas fa-table"></i> Dados de Pesquisa</h2>
      <table class="table table-striped table-hover table-bordered" id="price-table">
        <thead>
          <tr>
            <th>META</th>
            <th>ETAPA</th>
            <th>CLASSIFICAÇÃO</th>
            <th>MODALIDADE ESPORTIVA</th>
            <th>ITEM PADRONIZADO</th>
            <th>TIPO DE DESPESA</th>
            <th>NATUREZA DE DESPESA</th>
            <th>QUANTIDADE</th>
            <th>VALOR UNITÁRIO (R$)</th>
            <th>UF</th>
            <th>DATA BASE</th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", async () => {
      try {
        const response = await fetch("/api/pesquisa-preco");
        const data = await response.json();
  
        // Preencher filtros dinâmicos
        const ufFilter = document.querySelector("#ufFilter");
        const itemFilter = document.querySelector("#itemFilter");
  
        const uniqueUFs = [...new Set(data.map(item => item.UF))];
        const uniqueItems = [...new Set(data.map(item => item.ITEM_PADRONIZADO))];
  
        uniqueUFs.forEach(uf => {
          ufFilter.innerHTML += `<option value="${uf}">${uf}</option>`;
        });
  
        uniqueItems.forEach(item => {
          itemFilter.innerHTML += `<option value="${item}">${item}</option>`;
        });
  
        // DataTable configuration
        const table = $('#price-table').DataTable({
          data,
          columns: [
            { data: "META" },
            { data: "ETAPA" },
            { data: "CLASSIFICAÇÃO" },
            { data: "MODALIDADE" },
            { data: "ITEM_PADRONIZADO" },
            { data: "TIPO_DESPESA" },
            { data: "NATUREZA_DESPESA" },
            { data: "QUANTIDADE" },
            {
              data: "VALOR_UNITARIO",
              render: val => parseFloat(val || 0).toLocaleString("pt-BR", { style: "currency", currency: "BRL" })
            },
            { data: "UF" },
            { data: "DATA_BASE" },
          ]
        });
  
        // Chart.js configuration
        const ctx = document.getElementById("itemChart").getContext("2d");
        const chart = new Chart(ctx, {
          type: "bar",
          data: {
            labels: [],
            datasets: [{
              label: "Itens Aprovados",
              data: [],
              backgroundColor: "rgba(54, 162, 235, 0.6)"
            }]
          }
        });
  
        // Leaflet map setup
        const map = L.map("map").setView([-15.78, -47.93], 4);
        L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png").addTo(map);
        const markersLayer = L.layerGroup().addTo(map);
  
        const coordinates = {
        AC: [-9.974, -67.807], // Acre
        AL: [-9.648, -35.711], // Alagoas
        AM: [-3.119, -60.021], // Amazonas
        AP: [0.034, -51.069],  // Amapá
        BA: [-12.971, -38.501], // Bahia
        CE: [-3.717, -38.543], // Ceará
        DF: [-15.794, -47.882], // Distrito Federal
        ES: [-20.315, -40.312], // Espírito Santo
        GO: [-16.686, -49.264], // Goiás
        MA: [-2.530, -44.307],  // Maranhão
        MT: [-12.971, -55.665], // Mato Grosso
        MS: [-20.448, -54.629], // Mato Grosso do Sul
        MG: [-19.917, -43.934], // Minas Gerais
        PA: [-1.455, -48.490],  // Pará
        PB: [-7.239, -35.880],  // Paraíba
        PE: [-8.047, -34.882],  // Pernambuco
        PI: [-5.094, -42.803],  // Piauí
        PR: [-25.428, -49.273], // Paraná
        RJ: [-22.906, -43.176], // Rio de Janeiro
        RN: [-5.794, -35.211],  // Rio Grande do Norte
        RO: [-8.760, -63.900],  // Rondônia
        RR: [2.822, -60.675],   // Roraima
        RS: [-30.034, -51.218], // Rio Grande do Sul
        SC: [-27.595, -48.548], // Santa Catarina
        SE: [-10.947, -37.073], // Sergipe
        SP: [-23.550, -46.633], // São Paulo
        TO: [-10.175, -48.298]  // Tocantins
        };
  
        // Update summary, chart, and map
        const updateSummary = (filteredData) => {
          const values = filteredData.map(item => parseFloat(item.VALOR_UNITARIO) || 0);
          const min = Math.min(...values) || 0;
          const avg = values.reduce((sum, val) => sum + val, 0) / values.length || 0;
          const median = values.sort((a, b) => a - b)[Math.floor(values.length / 2)] || 0;
  
          document.getElementById("min-value").textContent = `R$ ${min.toFixed(2).replace('.', ',')}`;
          document.getElementById("avg-value").textContent = `R$ ${avg.toFixed(2).replace('.', ',')}`;
          document.getElementById("median-value").textContent = `R$ ${median.toFixed(2).replace('.', ',')}`;
        };
  
        const updateChart = (filteredData) => {
          const ufCounts = filteredData.reduce((acc, item) => {
            acc[item.UF] = (acc[item.UF] || 0) + 1;
            return acc;
          }, {});
  
          chart.data.labels = Object.keys(ufCounts);
          chart.data.datasets[0].data = Object.values(ufCounts);
          chart.update();
        };
  
        const updateMap = (filteredData) => {
          markersLayer.clearLayers();
          const ufCounts = filteredData.reduce((acc, item) => {
            acc[item.UF] = (acc[item.UF] || 0) + 1;
            return acc;
          }, {});
  
          Object.entries(coordinates).forEach(([uf, coord]) => {
            if (ufCounts[uf]) {
              const marker = L.marker(coord).addTo(markersLayer);
              marker.bindPopup(`UF: ${uf}<br>Itens: ${ufCounts[uf]}`);
            }
          });
        };
  
        const applyFilters = () => {
          const filteredData = data.filter(item =>
            (!ufFilter.value || item.UF === ufFilter.value) &&
            (!itemFilter.value || item.ITEM_PADRONIZADO === itemFilter.value)
          );
          table.clear().rows.add(filteredData).draw();
          updateSummary(filteredData);
          updateChart(filteredData);
          updateMap(filteredData);
        };
  
        ufFilter.addEventListener("change", applyFilters);
        itemFilter.addEventListener("change", applyFilters);
        document.querySelector("#resetFilters").addEventListener("click", () => {
          ufFilter.value = "";
          itemFilter.value = "";
          applyFilters();
        });
  
        applyFilters();
      } catch (err) {
        console.error("Erro ao carregar os dados:", err);
      }
    });
  </script>
</body>
</html>
