<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gerar Atestado de Capacidade Técnica</title>
    <style>
        /* Reset Básico */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Arial', sans-serif;
    background-color: #f4f4f9;
    color: #333;
    line-height: 1.6;
}

/* Header */
header {
    background-color: #003087;
    color: white;
    padding: 10px 20px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    position: fixed;
    width: 100%;
    top: 0;
    z-index: 1000;
    height: 60px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.header-left {
    display: flex;
    align-items: center;
    gap: 15px;
}

header img {
    max-width: 200px;
    height: auto;
}

header h1 {
    font-size: 1.2rem;
    font-weight: bold;
    white-space: nowrap;
}

.header-right {
    display: flex;
    align-items: center;
    gap: 10px;
}

.header-right span {
    font-size: 1rem;
}

.header-btn {
    background-color: #fff;
    color: #003087;
    border: 1px solid #ccc;
    padding: 5px 10px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 0.9rem;
    transition: background-color 0.3s;
}

.header-btn:hover {
    background-color: #f0f0f0;
}

/* Container Principal */
.container {
    background: #fff;
    margin: 80px auto 30px;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    max-width: 900px;
}

.container-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

.container-header h2 {
    font-size: 1.3rem;
    font-weight: bold;
    color: #333;
}

.status {
    font-size: 0.9rem;
    color: #666;
}

/* Sections */
.section {
    margin-bottom: 20px;
}

.section h3 {
    font-size: 1.2rem;
    font-weight: bold;
    color: #003087;
    margin-bottom: 10px;
}

/* Formulário */
.form-row {
    display: flex;
    flex-wrap: wrap;
    gap: 15px;
    background-color: #f9f9f9;
    padding: 15px;
    border-radius: 5px;
    border: 1px solid #e0e0e0;
}

.form-row .half-width {
    flex: 1;
    min-width: 200px;
}

.form-row .full-width {
    width: 100%;
}

/* Labels and Inputs */
label {
    font-size: 0.9rem;
    font-weight: bold;
    color: #333;
    margin-bottom: 5px;
    display: block;
}

input[type="text"],
select {
    width: 100%;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 0.9rem;
    background-color: #fff;
    transition: border-color 0.3s;
}

input[type="text"]:focus,
select:focus {
    border-color: #003087;
    outline: none;
}

/* Botões */
button {
    background-color: #fff;
    color: #003087;
    border: 1px solid #ccc;
    padding: 8px 15px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 0.9rem;
    transition: background-color 0.3s;
}

button:hover {
    background-color: #f0f0f0;
}

/* Button Container */
.button-container {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 20px;
}

.button-container button {
    background-color: #fff;
    color: #003087;
    border: 1px solid #ccc;
    padding: 8px 15px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 0.9rem;
    transition: background-color 0.3s;
}

.button-container button:hover {
    background-color: #f0f0f0;
}

.button-container button a {
    color: #003087;
    text-decoration: none;
}

/* Mensagem de Carregamento */
#loadingMessage {
    text-align: center;
    font-weight: bold;
    color: #003087;
}

/* Rodapé */
footer {
    text-align: center;
    padding: 10px;
    background-color: #003087;
    color: #fff;
    font-size: 0.8rem;
    margin-top: 20px;
}

/* Responsividade */
@media (max-width: 600px) {
    .form-row {
        flex-direction: column;
    }

    .container {
        margin: 70px 10px 20px;
        padding: 15px;
    }

    header h1 {
        font-size: 1rem;
    }

    .header-left {
        flex-direction: column;
        gap: 5px;
    }

    .header-right {
        flex-direction: column;
        gap: 5px;
    }
}

.hidden {
    display: none;
}

.button-group {
    display: flex;
    gap: 10px;
}
    </style>
</head>
<body>
    <!-- Cabeçalho -->
    <header>
        <div class="header-left">
            <img src="images/ASSINATURAS_ESPORTE__FUNDO PRETO 2 HORIZONTAL.png" class="logo-header" alt="Logo Ministério do Esporte">
        </div>

    </header>

    <!-- Container Principal -->
    <div class="container">
        <div class="container-header">
            <h2>Painel do Técnico</h2>
            <span class="status">Emissão</span>
        </div>

        <form id="declaracoesForm">
            <!-- Dados do Dirigente da Entidade -->
            <section class="section">
                <h3>Dados do Dirigente da Entidade</h3>
                <div class="form-row">
                    <div class="half-width">
                        <label for="dirigente">Nome:</label>
                        <input type="text" id="dirigente" name="Nome do Dirigente" maxlength="100" required>
                    </div>
                    <div class="half-width">
                        <label for="cpf">Matricula:</label>
                        <input type="text" id="cpf" name="CPF do Dirigente" maxlength="14" pattern="\d{3}\.\d{3}\.\d{3}-\d{2}" placeholder="000.000.000-00" oninput="formatarCPF(this)" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="half-width">
                        <label for="cargoDirigente">Cargo:</label>
                        <input type="text" id="cargoDirigente" name="Cargo do Dirigente" maxlength="50" required>
                    </div>
                </div>
            </section>

            <!-- Dados da Entidade -->
            <section class="section">
                <h3>Dados da Entidade</h3>
                <div class="form-row">
                    <div class="half-width">
                        <label for="entidade">Nome:</label>
                        <input type="text" id="entidade" name="Nome da Entidade" maxlength="100" required>
                    </div>
                    <div class="half-width">
                        <label for="cnpj">CNPJ (apenas números):</label>
                        <input type="text" id="cnpj" name="CNPJ da Entidade" maxlength="18" pattern="\d{2}\.\d{3}\.\d{3}/\d{4}-\d{2}" placeholder="00.000.000/0000-00" oninput="formatCNPJ(this)" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="full-width">
                        <label for="endereco">Endereço Completo:</label>
                        <input type="text" id="endereco" name="Endereço Completo da Sede" maxlength="200" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="half-width">
                        <label for="uf">UF:</label>
                        <select id="uf" name="UF da Entidade" required>
                            <option value="">Selecione o UF</option>
                        </select>
                    </div>
                    <div class="half-width">
                        <label for="municipio">Município:</label>
                        <select id="municipio" name="Município da Entidade" required>
                            <option value="">Selecione o Município</option>
                        </select>
                    </div>
                </div>
            </section>

            <!-- Dados da Proposta e Objeto -->
            <section class="section">
                <h3>Dados da Proposta</h3>
                <div class="form-row">
                    <div class="half-width">
                        <label for="proposta">Nº da Proposta:</label>
                        <input type="text" id="proposta" name="Número da Proposta" maxlength="20" required>
                    </div>
                    <div class="half-width">
                        <label for="objeto">Objeto:</label>
                        <input type="text" id="objeto" name="Objeto" maxlength="200" required>
                    </div>
                </div>
            </section>

            <!-- Coordenador Geral -->
            <section class="section">
                <h3>Coordenador Geral</h3>
                <div class="form-row">
                    <label>O Coordenador Geral será cedido pelo proponente?</label>
                </div>
                <div class="form-row button-group">
                    <button type="button" onclick="mostrarCoordenador('Sim')">Sim</button>
                    <button type="button" onclick="mostrarCoordenador('Não')">Não</button>
                </div>

                <!-- Seção que aparece somente se "Sim" for selecionado -->
                <div id="coordenadorFields" class="hidden">
                    <div class="form-row">
                        <div class="half-width">
                            <label for="nomeCoordenador">Nome Completo:</label>
                            <input type="text" id="nomeCoordenador" name="Nome do Coordenador" maxlength="100" required>
                        </div>
                        <div class="half-width">
                            <label for="cpfCoordenador">CPF (apenas números):</label>
                            <input type="text" id="cpfCoordenador" name="CPF do Coordenador" maxlength="14" pattern="\d{3}\.\d{3}\.\d{3}-\d{2}" placeholder="000.000.000-00" oninput="formatarCPF(this)" required>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="half-width">
                            <label for="rgCoordenador">RG:</label>
                            <input type="text" id="rgCoordenador" name="RG do Coordenador" maxlength="20" required>
                        </div>
                        <div class="half-width">
                            <label for="orgaoExpedidorCoordenador">Órgão Expedidor:</label>
                            <input type="text" id="orgaoExpedidorCoordenador" name="Órgão Expedidor do Coordenador" maxlength="10" required>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="half-width">
                            <label for="nomePrograma">Programa:</label>
                            <input type="text" id="nomePrograma" name="Programa" maxlength="100" required>
                        </div>
                    </div>
                </div>
            </section>
        </form>

        <!-- Botão para gerar PDF -->
        <div class="button-container">
            <button id="botaoGerarPDF">Gerar PDFs</button>
            <button id="botaoGerarAtestadoPDF">Gerar PDF Atestado de Capacidade Técnica</button>
            <button id="botaoVincularDirigentes">
                <a href="formulario-dirigente">DECLARAÇÕES ART 26, 27 DO DECRETO Nº 8.726</a>
            </button>
        </div>
        <div id="loadingMessage" style="display:none; color:blue; margin-top:10px;">
            Aguarde um momento, o download está sendo processado...
        </div>
    </div>

    <!-- Rodapé -->
    <footer>
        <p>© 2024 Ministério do Esporte</p>
    </footer>

    <!-- Scripts -->
    <script>
        // Função para formatar CPF
        function formatarCPF(input) {
            let value = input.value.replace(/\D/g, '');
            if (value.length > 11) value = value.slice(0, 11);
            value = value.replace(/(\d{3})(\d)/, '$1.$2');
            value = value.replace(/(\d{3})(\d)/, '$1.$2');
            value = value.replace(/(\d{3})(\d{1,2})$/, '$1-$2');
            input.value = value;
        }

        // Função para formatar CNPJ
        function formatCNPJ(input) {
            let value = input.value.replace(/\D/g, '');
            if (value.length > 14) value = value.slice(0, 14);
            value = value.replace(/(\d{2})(\d)/, '$1.$2');
            value = value.replace(/(\d{3})(\d)/, '$1.$2');
            value = value.replace(/(\d{3})(\d)/, '$1/$2');
            value = value.replace(/(\d{4})(\d{1,2})$/, '$1-$2');
            input.value = value;
        }

        // Função para mostrar/esconder campos do Coordenador Geral
        function mostrarCoordenador(opcao) {
            const coordenadorFields = document.getElementById('coordenadorFields');
            if (opcao === 'Sim') {
                coordenadorFields.classList.remove('hidden');
            } else {
                coordenadorFields.classList.add('hidden');
                document.getElementById('nomeCoordenador').value = '';
                document.getElementById('cpfCoordenador').value = '';
                document.getElementById('rgCoordenador').value = '';
                document.getElementById('orgaoExpedidorCoordenador').value = '';
                document.getElementById('nomePrograma').value = '';
            }
        }

        // Função para carregar UFs e Municípios via API do IBGE
        async function carregarUFs() {
            const ufSelect = document.getElementById('uf');
            try {
                const response = await fetch('https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome');
                const ufs = await response.json();
                ufs.forEach(uf => {
                    const option = document.createElement('option');
                    option.value = uf.sigla;
                    option.textContent = uf.sigla;
                    ufSelect.appendChild(option);
                });
            } catch (error) {
                console.error('Erro ao carregar UFs:', error);
            }
        }

        async function carregarMunicipios() {
            const ufSelect = document.getElementById('uf');
            const municipioSelect = document.getElementById('municipio');
            municipioSelect.innerHTML = '<option value="">Selecione o Município</option>';
            const uf = ufSelect.value;
            if (!uf) return;

            try {
                const response = await fetch(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${uf}/municipios?orderBy=nome`);
                const municipios = await response.json();
                municipios.forEach(municipio => {
                    const option = document.createElement('option');
                    option.value = municipio.nome;
                    option.textContent = municipio.nome;
                    municipioSelect.appendChild(option);
                });
            } catch (error) {
                console.error('Erro ao carregar municípios:', error);
            }
        }

        // Carregar UFs ao iniciar a página
        document.addEventListener('DOMContentLoaded', carregarUFs);

        // Carregar municípios ao selecionar um UF
        document.getElementById('uf').addEventListener('change', carregarMunicipios);
    </script>

    <!-- Bibliotecas externas -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script src="/js/Script/script.js"></script>
</body>
</html>